#BlueJ class context
comment0.target=NBody
comment0.text=\r\n\ Simulates\ an\ object\ with\ known\ mass\ and\ charge\ at\ an\ instance\ in\ time\ in\ two\ dimensions\ \ \r\n\r\n\ @author\ cling99\r\n\ @version\ 0.5\r\n
comment1.params=mass\ charge\ x\ y
comment1.target=NBody(double,\ double,\ double,\ double)
comment1.text=\r\n\ Constructs\ an\ instance\ of\ a\ NBody\ with\ NO\ initial\ velocity\r\n
comment10.params=
comment10.target=double[]\ getPos()
comment11.params=
comment11.target=double[]\ getVel()
comment12.params=
comment12.target=double[]\ getAcc()
comment13.params=g2
comment13.target=void\ draw(java.awt.Graphics2D)
comment2.params=mass\ charge\ x\ y\ vX\ vY
comment2.target=NBody(double,\ double,\ double,\ double,\ double,\ double)
comment2.text=\r\n\ Constructs\ an\ instance\ of\ a\ NBody\ WITH\ initial\ velocity\r\n
comment3.params=body
comment3.target=double[]\ getForces(NBody)
comment3.text=\r\n\ Calculates\ the\ combined\ force\ on\ this\ NBody\ by\ an\ external\ NBody\ of\ known\ mass\ and\ charge\r\n\ \r\n\ @param\ \ \ body\ \ \ \ An\ NBody\ object\ with\ known\ mass\ and\ charge\r\n\ @return\ \ force\ between\ two\ objects\ (x,\ y)\ with\ individual\ components\ after\r\n
comment4.params=body
comment4.target=double[]\ getMagForces(NBody)
comment4.text=\r\n\ Calculates\ the\ magnetic\ force\ on\ this\ NBody\ by\ an\ external\ NBody\ of\ known\ charge\ and\ velocity\r\n\ \ \ \ \ \ magnetic\ force\ doesn't\ follow\ Newton's\ third\ law\ so\ requires\ more\ calculations\r\n\ \ \ \ \ \ separated\ for\ efficiency\r\n\ \r\n\ @param\ \ \ body\ \ \ \ An\ NBody\ object\ with\ known\ mass\ and\ charge\r\n\ @return\ \ the\ magnetic\ force\ between\ two\ objects\ (x,\ y)\ with\ individual\ components\ after\r\n
comment5.params=body
comment5.target=boolean\ isInside(NBody)
comment5.text=\r\n\ Checks\ if\ the\ center\ of\ an\ NBody\ is\ within\ the\ radius\ of\ another\r\n\ \r\n\ @param\ \ \ body\ \ \ \ an\ NBody\ with\ known\ pos\r\n\ @return\ \ true\ if\ two\ bodies\ are\ overlapping,\ false\ otherwise\r\n
comment6.params=body
comment6.target=NBody\ inelasticCollide(NBody)
comment6.text=\r\n\ Models\ an\ inelastic\ collision\ between\ two\ bodies,\ only\ momentum\ is\ conserved\r\n\ \ \ \ \ \ returns\ a\ larger\ object\ with\ an\ initial\ velocity\r\n\ @param\ \ \ body\ \ \ \ an\ NBody\ with\ known\ mass,\ charge,\ and\ velocity\r\n\ @return\ \ A\ new\ NBody\ combining\ the\ masses\ of\ two\ NBody\ and\ conserved\ momentum\r\n
comment7.params=dT\ fX\ fY
comment7.target=void\ update(double,\ double,\ double)
comment7.text=\r\n\ Updates\ the\ position\ and\ velocity\ of\ the\ particle,\ \r\n\ \ \ \ \ \ assuming\ constant\ force\ throughout\ the\ time\ interval\r\n\ @param\ \ \ dT\ \ Time\ interval\ of\ update\ (Eulers)\r\n\ @param\ \ \ fX\ \ Net\ force\ in\ the\ x-direction\r\n\ @param\ \ \ fY\ \ Net\ force\ in\ the\ y-direction\r\n
comment8.params=
comment8.target=double\ getMass()
comment9.params=
comment9.target=double\ getCharge()
numComments=14
